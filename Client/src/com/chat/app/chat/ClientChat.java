/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.chat.app.chat;

import com.chat.app.handller.ChatMessage;
import com.chat.app.handller.ChatMessage.Action;
import com.chat.app.service.ClientService;
import java.awt.Color;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.net.Socket;
import java.util.HashSet;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;

/**
 *
 * @author SWL
 */
public class ClientChat extends javax.swing.JFrame {

private Socket socket;
private ChatMessage message;
private ClientService service;


    /**
     * Creates new form ClientChat
     */
    public ClientChat() {
        initComponents();
    }
 private class SocketListner implements Runnable{
private ObjectInputStream input;
public SocketListner(Socket socket){
    try {
        this.input=new ObjectInputStream(socket.getInputStream());
    } catch (IOException ex) {
        Logger.getLogger(ClientChat.class.getName()).log(Level.SEVERE, null, ex);
    }
}
        @Override
        public void run() {
             ChatMessage message=null;
             try {
        while((message= (ChatMessage) input.readObject())!=null){
            Action action= message.getAction();
            if(action.equals(Action.CONNECT)){
                connected(message);
            }else if(action.equals(Action.DISCONNECT)){
                disconnected();
                 socket.close();
            }else if(action.equals(Action.SEND_ONE)){
                receive(message);
            }else if(action.equals(Action.USER_ONLINE)){
                onlineUserList(message);
            }
        }
    } catch (IOException ex) {
        Logger.getLogger(ClientChat.class.getName()).log(Level.SEVERE, null, ex);
    } catch (ClassNotFoundException ex) {
        Logger.getLogger(ClientChat.class.getName()).log(Level.SEVERE, null, ex);
    }
        }
        
    }
    private void connected(ChatMessage message) {
        if (message.getText().equals("NO")) {
            this.txt_Name.setText("");
            JOptionPane.showMessageDialog(this, "connection not succesfull!");
            return;
        }
        this.message = message;
        this.btn_Connect.setEnabled(false);
        this.txt_Name.setEnabled(false);

        this.btn_Cancle.setEnabled(true);
        this.txtAreaReceive.setEnabled(true);
        this.txtAreaSend.setEnabled(true);
        this.btn_Clear.setEnabled(true);
        this.btn_Send.setEnabled(true);
        JOptionPane.showMessageDialog(this, "connection  succesfull!");

    }
 
    private void disconnected() {
        this.btn_Connect.setEnabled(true);
        this.txt_Name.setEnabled(true);
        this.btn_Cancle.setEnabled(false);
        this.txtAreaReceive.setEnabled(false);
        this.txtAreaSend.setEnabled(false);
        this.btn_Clear.setEnabled(false);
        this.btn_Send.setEnabled(false);
        
        this.txtAreaReceive.setText("");
         this.txtAreaSend.setText("");
        JOptionPane.showMessageDialog(this, "Disconnect  succesfull!");

    }
 private void receive(ChatMessage message){
 this.txtAreaReceive.append(message.getName()+" "+message.getText()+"\n");
 }
 private void onlineUserList(ChatMessage message){
     Set<String> names= message.getSetOnline();
     String[] array= (String[])names.toArray(new String[names.size()]);
     this.listOnlines.setListData(array);
     this.listOnlines.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
     this.listOnlines.setLayoutOrientation(JList.VERTICAL);
      
 }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txt_Name = new javax.swing.JTextField();
        btn_Connect = new javax.swing.JButton();
        btn_Cancle = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        listOnlines = new javax.swing.JList<>();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreaReceive = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtAreaSend = new javax.swing.JTextArea();
        btn_Clear = new javax.swing.JButton();
        btn_Send = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Connection"));

        txt_Name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_NameActionPerformed(evt);
            }
        });

        btn_Connect.setText("Connect");
        btn_Connect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ConnectActionPerformed(evt);
            }
        });

        btn_Cancle.setText("Disconnect");
        btn_Cancle.setEnabled(false);
        btn_Cancle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_CancleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txt_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(btn_Connect)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(btn_Cancle)
                .addGap(19, 19, 19))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_Connect)
                    .addComponent(btn_Cancle))
                .addContainerGap(48, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Online Users"));

        jScrollPane3.setViewportView(listOnlines);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3)
        );

        jPanel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        txtAreaReceive.setColumns(20);
        txtAreaReceive.setRows(5);
        txtAreaReceive.setEnabled(false);
        jScrollPane1.setViewportView(txtAreaReceive);

        txtAreaSend.setColumns(20);
        txtAreaSend.setRows(5);
        txtAreaSend.setEnabled(false);
        jScrollPane2.setViewportView(txtAreaSend);

        btn_Clear.setText("Clear");
        btn_Clear.setEnabled(false);
        btn_Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ClearActionPerformed(evt);
            }
        });

        btn_Send.setText("Send");
        btn_Send.setEnabled(false);
        btn_Send.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_SendActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(96, 96, 96)
                .addComponent(btn_Clear)
                .addGap(80, 80, 80)
                .addComponent(btn_Send)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_Clear)
                    .addComponent(btn_Send))
                .addGap(14, 14, 14))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_NameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_NameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_NameActionPerformed

    private void btn_ConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ConnectActionPerformed
      String name=this.txt_Name.getText();
      if(!name.isEmpty()){
         this.message=new ChatMessage();
          this.message.setAction(Action.CONNECT);
          this.message.setName(name);
              this.service=new ClientService();
              this.socket=this.service.connect();
              
              new Thread(new SocketListner(this.socket)).start();
          
          this.service.send(message);
      }
    }//GEN-LAST:event_btn_ConnectActionPerformed

    private void btn_CancleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_CancleActionPerformed
this.message.setAction(Action.DISCONNECT);
this.service.send(message);
        disconnected();
        return;
    }//GEN-LAST:event_btn_CancleActionPerformed

    private void btn_SendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_SendActionPerformed
String text= this.txtAreaSend.getText();
String name=this.message.getName();
this.message=new ChatMessage();
if(this.listOnlines.getSelectedIndex() > -1){
    this.message.setNameReserved((String) this.listOnlines.getSelectedValue());
    this.message.setAction(Action.SEND_ONE);
    this.listOnlines.clearSelection();
}else{
    this.message.setAction(Action.SEND_ALL);
}
if(!text.isEmpty()){
this.message.setName(name);
this.message.setText(text);
this.txtAreaReceive.append(" "+text+" \n");
this.txtAreaReceive.setForeground(Color.red);
this.service.send(this.message);
}
this.txtAreaSend.setText("");
    }//GEN-LAST:event_btn_SendActionPerformed

    private void btn_ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ClearActionPerformed
             this.txtAreaSend.setText("");
    }//GEN-LAST:event_btn_ClearActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Cancle;
    private javax.swing.JButton btn_Clear;
    private javax.swing.JButton btn_Connect;
    private javax.swing.JButton btn_Send;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList<String> listOnlines;
    private javax.swing.JTextArea txtAreaReceive;
    private javax.swing.JTextArea txtAreaSend;
    private javax.swing.JTextField txt_Name;
    // End of variables declaration//GEN-END:variables
}
